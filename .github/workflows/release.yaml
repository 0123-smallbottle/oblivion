name: Android CI

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build:

    permissions:
      contents: write

    runs-on: ubuntu-latest

    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0

    steps:

      - name: Checkout codebase
        uses: actions/checkout@v3

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Show workflow information
        run: |
          export _NAME=$GOOS-$GOARCH$GOARM$GOMIPS.${GITHUB_SHA::6}
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true

      # Set up JDK
      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: 'gradle'

      - name: Install NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26b
          link-to-sdk: true

      - name: Install NDK and Gomobile
        run: |
          for d in $ANDROID_NDK_HOME/../26*; do
            ANDROID_NDK_HOME=$d
          done
          cd app/libs
          go install golang.org/x/mobile/cmd/gomobile@latest
          go install golang.org/x/mobile/cmd/gobind@latest
          go get golang.org/x/mobile/cmd/gobind
          go get golang.org/x/mobile/cmd/gomobile
          gomobile init
        env:
          GOPROXY: https://proxy.golang.org,direct
          GO111MODULE: "on"

      # Build Go part with gomobile
      - name: Build Go part with gomobile
        run: |
          gomobile bind -ldflags '-s -w' -o tun2socks.aar -target android .
          cd ../..

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Build APKs
      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Upload APKs to GitHub Release
      - name: Upload APKs to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Debug APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./app/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug.apk
          asset_content_type: application/vnd.android.package-archive